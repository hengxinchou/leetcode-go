/*
 * @lc app=leetcode.cn id=36 lang=golang
 *
 * [36] 有效的数独
 */

// @lc code=start
package main
import "fmt"

func main() {
	var a [][]byte
	a = [][]byte{ {'5','3','.','.','7','.','.','.','.'},
  {'6','.','.','1','9','5','.','.','.'},
  {'.','9','8','.','.','.','.','6','.'},
  {'8','.','.','.','6','.','.','.','3'},
  {'4','.','.','8','.','3','.','.','1'},
  {'7','.','.','.','2','.','.','.','6'},
  {'.','6','.','.','.','.','2','8','.'},
  {'.','.','.','4','1','9','.','.','5'},
  {'.','.','.','.','8','.','.','7','9'} }
  fmt.Printf("%t\n", isValidSudoku(a))

	a = [][]byte{ {'8','3','.','.','7','.','.','.','.'},
  {'6','.','.','1','9','5','.','.','.'},
  {'.','9','8','.','.','.','.','6','.'},
  {'8','.','.','.','6','.','.','.','3'},
  {'4','.','.','8','.','3','.','.','1'},
  {'7','.','.','.','2','.','.','.','6'},
  {'.','6','.','.','.','.','2','8','.'},
  {'.','.','.','4','1','9','.','.','5'},
  {'.','.','.','.','8','.','.','7','9'}}
  fmt.Printf("%t\n", isValidSudoku(a))
}

func isValidSudoku(board [][]byte) bool {
  var row,col,sbox [9][9]int
 for i := 0 ; i < 9; i++ {
     for j := 0 ; j < 9; j++ {
         if board[i][j] != '.' {
             num := board[i][j] - '1'
             index_box := (i/3)*3+j/3
             if row[i][num] == 1 {
                 return false
             }else{
                 row[i][num] = 1 
             }
             if col[j][num] == 1 {
                 return false
             }else{
                 col[j][num] = 1 
             }
             if sbox[index_box][num] == 1 {
                 return false
             }else {
                 sbox[index_box][num] = 1 
             }
         }
     }
 }
 return true
}

// @lc code=end

